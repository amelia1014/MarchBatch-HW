Answer following questions
1.	What is a result set?
    It is a set of rows from a database, as well as metadata about the query such as the column names, and the types and sizes of each column.
    
2.	What is the difference between Union and Union All?
    union can not be used with recursive CTE but union all can be used with recursive CTE
    union will give the unique records but union all gives duplicate
    union will sort the resultset based on the first column of the first select statementbut union all will not
    union is slower than union all

3.	What are the other Set Operators SQL Server has?
    there are intersect and except
    
4.	What is the difference between Union and Join?
    Join combine data into new columns, but unions combine data into new rows
    
5.	What is the difference between INNER JOIN and FULL JOIN?
    Inner join will return only matched row, the intersection of two tables. 
    But full join returns rows from both tables even ifthere are no matching rows in the other table
    
6.	What is difference between left join and outer join
    Left join returns all the rows from the left table and insert NULL values when right table doesnâ€™t match.
    Outer join compares two tables and returns data when a match is available or NULL values otherwise. 

7.	What is cross join?
    Cross Join compares two tables and return every possible combination of rows from thetwo tables.
    
8.	What is the difference between WHERE clause and HAVING clause?
    Having clause should be used with Group by statements. But where clause cannot beused with aggregates.
    WHERE is used to filter rows before grouping and HAVING is used to exclude records after grouping.
    
9.	Can there be multiple group by columns?
    Yes.


Write queries for following scenarios
1.	How many products can you find in the Production.Product table?

Select COUNT(*) FROM Production.Product

2.	Write a query that retrieves the number of products in the Production.Product table that are included in a subcategory. 
The rows that have NULL in column ProductSubcategoryID are considered to not be a part of any subcategory.

SELECT COUNT(ProductSubcategoryID)
FROM Production.Product

3.	How many Products reside in each SubCategory? Write a query to display the results with the following titles.
ProductSubcategoryID CountedProducts
-------------------- ---------------

SELECT ProductSubcategoryID, COUNT([Name]) AS CountedProducts
FROM Production.Product
GROUP BY ProductSubcategoryID

4.	How many products that do not have a product subcategory. 

SELECT COUNT(*) AS NoSubCat FROM Production.Product
WHERE ProductSubcategoryID IS NULL

5.	Write a query to list the summary of products in the Production.ProductInventory table.

SELECT ProductID, SUM(quantity) AS TheSum
FROM Production.ProductInventory
GROUP BY ProductID

6.	 Write a query to list the summary of products in the Production.ProductInventory table and LocationID set to 40 and limit the result to include just summarized quantities less than 100.
              ProductID    TheSum
-----------        ----------

SELECT ProductID, SUM(quantity) AS TheSum
FROM Production.ProductInventory
WHERE LocationID = 40
GROUP BY ProductID
HAVING SUM(quantity) < 100

7.	Write a query to list the summary of products with the shelf information in the Production.ProductInventory table and LocationID set to 40 and limit the result to include just summarized quantities less than 100
Shelf      ProductID    TheSum
---------- -----------        -----------

SELECT Shelf, ProductID, SUM(quantity) AS TheSum
FROM Production.ProductInventory
WHERE LocationID = 40
GROUP BY ProductID, shelf
HAVING SUM(quantity) < 100

8.	Write the query to list the average quantity for products where column LocationID has the value of 10 from the table Production.ProductInventory table.

SELECT AVG(Quantity) AS TheAvg
FROM Production.ProductInventory
Where LocationID = 10

9.	Write query  to see the average quantity  of  products by shelf  from the table Production.ProductInventory
ProductID   Shelf      TheAvg
----------- ---------- -----------


SELECT ProductID, Shelf, AVG(Quantity) AS TheAvg
FROM Production.ProductInventory


10.	Write query  to see the average quantity  of  products by shelf excluding rows that has the value of N/A in the column Shelf from the table Production.ProductInventory
ProductID   Shelf      TheAvg
----------- ---------- -----------


SELECT ProductID, Shelf, AVG(Quantity) AS TheAvg
FROM Production.ProductInventory
WHERE LocationID = 10 AND Shelf <> 'N/A'
GROUP BY ROLLUP (Shelf, ProductID) 
ORDER BY Shelf

11.	List the members (rows) and average list price in the Production.Product table. This should be grouped independently over the Color and the Class column. Exclude the rows where Color or Class are null.
Color           	Class 	TheCount   	 AvgPrice
--------------	- ----- 	----------- 	---------------------

SELECT Color, Class, COUNT(*) AS TheCount, AVG(ListPrice) AS AvgPrice
FROM Production.Product
WHERE Class IS NOT NULL AND Color IS NOT NULL
GROUP BY GROUPING SETS ((Color), (Class))



Joins:
12.	  Write a query that lists the country and province names from person. CountryRegion and person. StateProvince tables. Join them and produce a result set similar to the following. 

Country                        Province
---------                          ----------------------

SELECT CR.[Name] AS Country, SP.[Name] AS Province
FROM Person.CountryRegion AS CR
JOIN Person.StateProvince AS SP
ON CR.CountryRegionCode = SP.CountryRegionCode

13.	Write a query that lists the country and province names from person. CountryRegion and person. StateProvince tables and list the countries filter them by Germany and Canada. Join them and produce a result set similar to the following.

Country                        Province
---------                          ----------------------

SELECT CR.[Name] AS Country, SP.[Name] AS Province
FROM Person.CountryRegion AS CR
JOIN Person.StateProvince AS SP
ON CR.CountryRegionCode = SP.CountryRegionCode
WHERE CR.[Name] IN ('Germany','Canada')
ORDER BY Country ASC, Province ASC  

        
        
        Using Northwnd Database: (Use aliases for all the Joins)
14.	List all Products that has been sold at least once in last 25 years.

SELECT P.ProductName
FROM Products P
LEFT JOIN OrderDetails Od
ON P.ProductId = Od.ProductId
WHERE Od.Quantity > 1

15.	List top 5 locations (Zip Code) where the products sold most.

SELECT TOP 5 ZipCode, ProductSold
FROM(
SELECT O.ShipPostalCode as ZipCode, COUNT(Od.ProductId) as ProductSold
FROM OrderDetails Od
JOIN Orders O
ON Od.OrderId = O.OrderId
GROUP BY O.ShipPostalCode, COUNT(Od.ProductId))
ORDER BY ProductSold

16.	List top 5 locations (Zip Code) where the products sold most in last 20 years.

SELECT TOP 5 ZipCode, ProductSold
FROM(
SELECT O.ShipPostalCode as ZipCode, COUNT(Od.ProductId) as ProductSold
FROM OrderDetails Od
JOIN Orders O
ON Od.OrderId = O.OrderId
WHERE OrderData - GETCURDATE() < 20
GROUP BY O.ShipPostalCode, COUNT(Od.ProductId)
)
ORDER BY ProductSold

17.	 List all city names and number of customers in that city.    

SELECT ShipCity, COUNT(CustromerId) as NumberOfCustomer
FROM Orders
GROUP BY ShipCity,COUNT(CustromerId)

18.	List city names which have more than 10 customers, and number of customers in that city 

SELECT ShipCity, COUNT(CustromerId) as NumberOfCustomer
FROM Orders
WHERE COUNT(CustomerId) > 10
GROUP BY ShipCity,COUNT(CustromerId)

19.	List the names of customers who placed orders after 1/1/98 with order date.

SELECT C.ContactName
FROM Customers C
Left Join Orders O
ON C.CustomerId = O.CustomerId
WHERE OrderDate > '1/1/98'

20.	List the names of all customers with most recent order dates 

SELECT C.ContactName, MAX(O.OrderDate)
FROM Customers C
Left Join Orders O
ON C.CustomerId = O.CustomerId


21.	Display the names of all customers  along with the  count of products they bought 

SELECT C.ContactName, COUNT(Od.ProductId)
FROM Customers C
Left Join Orders O
ON C.CustomerId = O.CustomerId
LEFT JOIN OrderDetails Od
ON O.OderId = Od.OrderId

22.	Display the customer ids who bought more than 100 Products with count of products.

SELECT C.CustomerId, COUNT(Od.ProductId)
FROM Customers C
Left Join Orders O
ON C.CustomerId = O.CustomerId
LEFT JOIN OrderDetails Od
ON O.OderId = Od.OrderId
WHERE COUNT(Od.ProductId) > 100

23.	List all of the possible ways that suppliers can ship their products. Display the results as below
Supplier Company Name   	Shipping Company Name
---------------------------------            ----------------------------------
24.	Display the products order each day. Show Order date and Product Name.
25.	Displays pairs of employees who have the same job title.
26.	Display all the Managers who have more than 2 employees reporting to them.
27.	Display the customers and suppliers by city. The results should have the following columns
City 
Name 
Contact Name,
Type (Customer or Supplier)
 28. Have two tables T1 and T2
F1.T1	F2.T2
1	2
2	3
3	4

Please write a query to inner join these two tables and write down the result of this query.
 29. Based on above two table, Please write a query to left outer join these two tables and write down the result of this query.
